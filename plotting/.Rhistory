x10.Plot <- as.data.frame(cbind(denom,unlist(x10)))
colnames(x10.Plot) <- c("BkgrSize","pval")
x15 <- lapply(denom, make.df15)
x15.Plot <- as.data.frame(cbind(denom,unlist(x15)))
colnames(x15.Plot) <- c("BkgrSize","pval")
pl.100 <- ggplot() + geom_point(data=x2.Plot, aes(x=BkgrSize, y=pval), color="green") + geom_point(data=x5.Plot, aes(x=BkgrSize, y=pval), color="black") + geom_point(data=x10.Plot, aes(x=BkgrSize, y=pval), color="blue") + geom_point(data=x15.Plot, aes(x=BkgrSize, y=pval), color="red") + geom_hline(aes(yintercept=1.3, color = "red"), size=2)  + ylim(0, 25) + ggtitle("100 Gene Pathway")
pl.100.fig <- ggplot() + geom_point(data=x2.Plot, aes(x=BkgrSize, y=pval), color="green") + geom_point(data=x5.Plot, aes(x=BkgrSize, y=pval), color="black") + geom_point(data=x10.Plot, aes(x=BkgrSize, y=pval), color="blue") + geom_point(data=x15.Plot, aes(x=BkgrSize, y=pval), color="red") + geom_hline(aes(yintercept=1.3, color = "red"), size=2)  + ylim(0, 20) + ggtitle("100 Gene Pathway")
###########
pathSize <- 200
x2 <- lapply(denom, make.df2)
x2.Plot <- as.data.frame(cbind(denom,unlist(x2)))
colnames(x2.Plot) <- c("BkgrSize","pval")
x5 <- lapply(denom, make.df5)
x5.Plot <- as.data.frame(cbind(denom,unlist(x5)))
colnames(x5.Plot) <- c("BkgrSize","pval")
x10 <- lapply(denom, make.df10)
x10.Plot <- as.data.frame(cbind(denom,unlist(x10)))
colnames(x10.Plot) <- c("BkgrSize","pval")
x15 <- lapply(denom, make.df15)
x15.Plot <- as.data.frame(cbind(denom,unlist(x15)))
colnames(x15.Plot) <- c("BkgrSize","pval")
pl.200 <- ggplot() + geom_point(data=x2.Plot, aes(x=BkgrSize, y=pval), color="green") + geom_point(data=x5.Plot, aes(x=BkgrSize, y=pval), color="black") + geom_point(data=x10.Plot, aes(x=BkgrSize, y=pval), color="blue") + geom_point(data=x15.Plot, aes(x=BkgrSize, y=pval), color="red") + geom_hline(aes(yintercept=1.3, color = "red"), size=2)  + ylim(0, 25) + ggtitle("200 Gene Pathway")
###########
pathSize <- 500
x2 <- lapply(denom, make.df2)
x2.Plot <- as.data.frame(cbind(denom,unlist(x2)))
colnames(x2.Plot) <- c("BkgrSize","pval")
x5 <- lapply(denom, make.df5)
x5.Plot <- as.data.frame(cbind(denom,unlist(x5)))
colnames(x5.Plot) <- c("BkgrSize","pval")
x10 <- lapply(denom, make.df10)
x10.Plot <- as.data.frame(cbind(denom,unlist(x10)))
colnames(x10.Plot) <- c("BkgrSize","pval")
x15 <- lapply(denom, make.df15)
x15.Plot <- as.data.frame(cbind(denom,unlist(x15)))
colnames(x15.Plot) <- c("BkgrSize","pval")
pl.500 <- ggplot() + geom_point(data=x2.Plot, aes(x=BkgrSize, y=pval), color="green") + geom_point(data=x5.Plot, aes(x=BkgrSize, y=pval), color="black") + geom_point(data=x10.Plot, aes(x=BkgrSize, y=pval), color="blue") + geom_point(data=x15.Plot, aes(x=BkgrSize, y=pval), color="red") + geom_hline(aes(yintercept=1.3, color = "red"), size=2)  + ylim(0, 25) + ggtitle("500 Gene Pathway")
ggarrange(pl.25,pl.50,pl.100,pl.200, legend = FALSE, ncol=4, nrow=1)
pdf(paste0('pl100.pdf'),width=8, height=8)
pl.100.fig
dev.off()
pl.100.fig
# < -1 FC
a <- data.frame(c(8,62-8),c(194,20237-194))
a
fisher.test(a, alternative="greater")
b <- data.frame(c(27,268-27),c(194,20237-194))
b
fisher.test(b, alternative="greater")
d.ex1 <- data.frame(c(3,297),c(37,29663))
d.ex1
fisher.test(d.ex1, alternative="greater")
d.ex2 <- data.frame(c(3-1,297),c(37+1,29663))
d.ex2
fisher.test(d.ex2, alternative="greater")
testDGEs.df <- function(degCount){
a <- data.frame(c(degsInPath,degCount),c(pathSize,bkground))
x <- fisher.test(a, alternative="greater")
return(-log(x$p.value,10))
}
degSize <- seq(from = 50, to = 2000, by = 10)
bkground <- 17000
###########
pathSize <- 25
degsInPath <- 2
degs.2 <- lapply(degSize, testDGEs.df)
degs.2.Plot <- as.data.frame(cbind(degSize,unlist(degs.2)))
colnames(degs.2.Plot) <- c("degSize","pval")
degsInPath <- 5
degs.5 <- lapply(degSize, testDGEs.df)
degs.5.Plot <- as.data.frame(cbind(degSize,unlist(degs.5)))
colnames(degs.5.Plot) <- c("degSize","pval")
degsInPath <- 10
degs.10 <- lapply(degSize, testDGEs.df)
degs.10.Plot <- as.data.frame(cbind(degSize,unlist(degs.10)))
colnames(degs.10.Plot) <- c("degSize","pval")
degsInPath <- 15
degs.15 <- lapply(degSize, testDGEs.df)
degs.15.Plot <- as.data.frame(cbind(degSize,unlist(degs.15)))
colnames(degs.15.Plot) <- c("degSize","pval")
pl.25path <- ggplot() + geom_point(data=degs.2.Plot, aes(x=degSize, y=pval), color="green") + geom_point(data=degs.5.Plot, aes(x=degSize, y=pval), color="black") + geom_point(data=degs.10.Plot, aes(x=degSize, y=pval), color="blue") + geom_point(data=degs.15.Plot, aes(x=degSize, y=pval), color="red") + geom_hline(aes(yintercept=1.3, color = "red"), size=2) + ylim(0, 25) + ggtitle("25 Gene Pathway")
###########
pathSize <- 50
degsInPath <- 2
degs.2 <- lapply(degSize, testDGEs.df)
degs.2.Plot <- as.data.frame(cbind(degSize,unlist(degs.2)))
colnames(degs.2.Plot) <- c("degSize","pval")
degsInPath <- 5
degs.5 <- lapply(degSize, testDGEs.df)
degs.5.Plot <- as.data.frame(cbind(degSize,unlist(degs.5)))
colnames(degs.5.Plot) <- c("degSize","pval")
degsInPath <- 10
degs.10 <- lapply(degSize, testDGEs.df)
degs.10.Plot <- as.data.frame(cbind(degSize,unlist(degs.10)))
colnames(degs.10.Plot) <- c("degSize","pval")
degsInPath <- 15
degs.15 <- lapply(degSize, testDGEs.df)
degs.15.Plot <- as.data.frame(cbind(degSize,unlist(degs.15)))
colnames(degs.15.Plot) <- c("degSize","pval")
pl.50path <- ggplot() + geom_point(data=degs.2.Plot, aes(x=degSize, y=pval), color="green") + geom_point(data=degs.5.Plot, aes(x=degSize, y=pval), color="black") + geom_point(data=degs.10.Plot, aes(x=degSize, y=pval), color="blue") + geom_point(data=degs.15.Plot, aes(x=degSize, y=pval), color="red") + geom_hline(aes(yintercept=1.3, color = "red"), size=2) + ylim(0, 25) + ggtitle("50 Gene Pathway")
###########
pathSize <- 100
degsInPath <- 2
degs.2 <- lapply(degSize, testDGEs.df)
degs.2.Plot <- as.data.frame(cbind(degSize,unlist(degs.2)))
colnames(degs.2.Plot) <- c("degSize","pval")
degsInPath <- 5
degs.5 <- lapply(degSize, testDGEs.df)
degs.5.Plot <- as.data.frame(cbind(degSize,unlist(degs.5)))
colnames(degs.5.Plot) <- c("degSize","pval")
degsInPath <- 10
degs.10 <- lapply(degSize, testDGEs.df)
degs.10.Plot <- as.data.frame(cbind(degSize,unlist(degs.10)))
colnames(degs.10.Plot) <- c("degSize","pval")
degsInPath <- 15
degs.15 <- lapply(degSize, testDGEs.df)
degs.15.Plot <- as.data.frame(cbind(degSize,unlist(degs.15)))
colnames(degs.15.Plot) <- c("degSize","pval")
pl.100path <- ggplot() + geom_point(data=degs.2.Plot, aes(x=degSize, y=pval), color="green") + geom_point(data=degs.5.Plot, aes(x=degSize, y=pval), color="black") + geom_point(data=degs.10.Plot, aes(x=degSize, y=pval), color="blue") + geom_point(data=degs.15.Plot, aes(x=degSize, y=pval), color="red") + geom_hline(aes(yintercept=1.3, color = "red"), size=2) + ylim(0, 20) + ggtitle("100 Gene Pathway")
###########
pathSize <- 200
degsInPath <- 2
degs.2 <- lapply(degSize, testDGEs.df)
degs2.Plot <- as.data.frame(cbind(degSize,unlist(degs.2)))
colnames(degs.2.Plot) <- c("degSize","pval")
degsInPath <- 5
degs.5 <- lapply(degSize, testDGEs.df)
degs.5.Plot <- as.data.frame(cbind(degSize,unlist(degs.5)))
colnames(degs.5.Plot) <- c("degSize","pval")
degsInPath <- 10
degs.10 <- lapply(degSize, testDGEs.df)
degs.10.Plot <- as.data.frame(cbind(degSize,unlist(degs.10)))
colnames(degs.10.Plot) <- c("degSize","pval")
degsInPath <- 15
degs.15 <- lapply(degSize, testDGEs.df)
degs.15.Plot <- as.data.frame(cbind(degSize,unlist(degs.15)))
colnames(degs.15.Plot) <- c("degSize","pval")
pl.200path <- ggplot() + geom_point(data=degs.2.Plot, aes(x=degSize, y=pval), color="green") + geom_point(data=degs.5.Plot, aes(x=degSize, y=pval), color="black") + geom_point(data=degs.10.Plot, aes(x=degSize, y=pval), color="blue") + geom_point(data=degs.15.Plot, aes(x=degSize, y=pval), color="red") + geom_hline(aes(yintercept=1.3, color = "red"), size=2) + ylim(0, 25) + ggtitle("200 Gene Pathway")
ggarrange(pl.25path, pl.50path, pl.100path,pl.200path, legend = FALSE, ncol=4, nrow=1)
pdf(paste0('pl100path.pdf'),width=8, height=8)
pl.100path
dev.off()
pl.100path
testDGEs.df <- function(degCount){
a <- data.frame(c(degsInPath,degCount),c(pathSize,20000-degCount))
x <- fisher.test(a, alternative="greater")
return(-log(x$p.value,10))
}
degSize <- seq(from = 1000, to = 6000, by = 10)
###########
pathSize <- 100
degsInPath <- 20
degs.20 <- lapply(degSize, testDGEs.df)
degs.20.Plot <- as.data.frame(cbind(degSize,unlist(degs.20)))
colnames(degs.20.Plot) <- c("degSize","pval")
degsInPath <- 40
degs.40 <- lapply(degSize, testDGEs.df)
degs.40.Plot <- as.data.frame(cbind(degSize,unlist(degs.40)))
colnames(degs.40.Plot) <- c("degSize","pval")
degsInPath <- 60
degs.60 <- lapply(degSize, testDGEs.df)
degs.60.Plot <- as.data.frame(cbind(degSize,unlist(degs.60)))
colnames(degs.60.Plot) <- c("degSize","pval")
degsInPath <- 80
degs.80 <- lapply(degSize, testDGEs.df)
degs.80.Plot <- as.data.frame(cbind(degSize,unlist(degs.80)))
colnames(degs.80.Plot) <- c("degSize","pval")
pl.100 <- ggplot() + geom_point(data=degs.20.Plot, aes(x=degSize, y=pval), color="green") + geom_point(data=degs.40.Plot, aes(x=degSize, y=pval), color="black") + geom_point(data=degs.60.Plot, aes(x=degSize, y=pval), color="blue") + geom_point(data=degs.80.Plot, aes(x=degSize, y=pval), color="red") + ylab(label = '-log10 pvalue') + xlab(label = 'DEG Count') + ggtitle("100 Gene Pathway")
#geom_hline(aes(yintercept=1.3, color = "red"), size=2)
h <- 1.3
pl.100.pub <- pl.100 + scale_x_continuous(limits = c(1000, 6000),breaks = c(1000, 2000, 3000, 4000, 5000, 6000)) + scale_y_continuous(limits = c(0, 15),breaks = c(0, 5, 10, 15)) + geom_hline(aes(yintercept=h, color = "red"), size=2, show.legend=FALSE) + geom_text(aes(0,h,label = h, vjust = -0.5))
pl.100.pub
pdf(paste0('pl.100.pub.pdf'),width=6, height=6)
pl.100.pub
dev.off()
testDGEs.df <- function(degCount){
a <- data.frame(c(degsInPath,degCount),c(pathSize,20000-degCount))
x <- fisher.test(a, alternative="greater")
return(-log(x$p.value,10))
}
degSize <- seq(from = 1000, to = 6000, by = 10)
###########
pathSize <- 1000
degsInPath <- 200
degs.200 <- lapply(degSize, testDGEs.df)
degs.200.Plot <- as.data.frame(cbind(degSize,unlist(degs.200)))
colnames(degs.200.Plot) <- c("degSize","pval")
degsInPath <- 400
degs.400 <- lapply(degSize, testDGEs.df)
degs.400.Plot <- as.data.frame(cbind(degSize,unlist(degs.400)))
colnames(degs.400.Plot) <- c("degSize","pval")
degsInPath <- 600
degs.600 <- lapply(degSize, testDGEs.df)
degs.600.Plot <- as.data.frame(cbind(degSize,unlist(degs.600)))
colnames(degs.600.Plot) <- c("degSize","pval")
degsInPath <- 800
degs.800 <- lapply(degSize, testDGEs.df)
degs.800.Plot <- as.data.frame(cbind(degSize,unlist(degs.800)))
colnames(degs.800.Plot) <- c("degSize","pval")
pl.1000 <- ggplot() + geom_point(data=degs.200.Plot, aes(x=degSize, y=pval), color="green") + geom_point(data=degs.400.Plot, aes(x=degSize, y=pval), color="black") + geom_point(data=degs.600.Plot, aes(x=degSize, y=pval), color="blue") + geom_point(data=degs.800.Plot, aes(x=degSize, y=pval), color="red") + ylab(label = '-log10 pvalue') + xlab(label = 'DEG Count') + ggtitle("1000 Gene Pathway")
#geom_hline(aes(yintercept=1.3, color = "red"), size=2)
h <- 1.3
pl.1000.pub <- pl.1000 + scale_x_continuous(limits = c(1000, 6000),breaks = c(1000, 2000, 3000, 4000, 5000, 6000)) + scale_y_continuous(limits = c(0, 15),breaks = c(0, 5, 10, 15)) + geom_hline(aes(yintercept=h, color = "red"), size=2, show.legend=FALSE) + geom_text(aes(0,h,label = h, vjust = -0.5))
pl.1000.pub
pdf(paste0('pl.1000.pub.pdf'),width=6, height=6)
pl.1000.pub
dev.off()
g1revDEst <- read.xlsx("../shared_data/G1vRev_data_vol_mod.xlsx", colNames=TRUE, rowNames=TRUE)
g1revDE <- g1revDEst %>% mutate(threshold = ifelse(adp <= 0.05 & abs(logFC) >= 1,"de","other"))
g1revDE.58 <- g1revDEst %>% mutate(threshold = ifelse(adp <= 0.05 & abs(logFC) >= 0.58,"de","other"))
g1revDEdw <- g1revDEst %>% mutate(threshold = ifelse(adp <= 0.05 & logFC <= -1,"de","other"))
g1revDEdw.58 <- g1revDEst %>% mutate(threshold = ifelse(adp <= 0.05 & logFC <=  -0.58,"de","other"))
a <- ggplot(g1revDE) +
geom_point(aes(x=logFC, y=-log10(adp), color=threshold)) +
scale_color_manual(values=c("red", "grey")) +
ggtitle("abs(logFC) >= 1, 102 DEGs") +
xlab("log2FC") +
ylab("-log10(P-value)") +
scale_y_continuous(limits = c(0,13)) +
scale_x_continuous(limits = c(-2.2,2.2)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.6), hjust = 0.5),
axis.title = element_text(size = rel(1.4)),
axis.text.x = element_text(size = rel(2)),
axis.text.y = element_text(size = rel(2)),
panel.background = element_rect(fill = "white"))
b <- ggplot(g1revDE.58) +
geom_point(aes(x=logFC, y=-log10(adp), color=threshold)) +
scale_color_manual(values=c("red", "grey")) +
ggtitle("abs(logFC) >= 0.58, 466 DEGs") +
xlab("log2FC") +
ylab("-log10(P-value)") +
scale_y_continuous(limits = c(0,13)) +
scale_x_continuous(limits = c(-2.2,2.2)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.6), hjust = 0.5),
axis.title = element_text(size = rel(1.4)),
axis.text.x = element_text(size = rel(2)),
axis.text.y = element_text(size = rel(2)),
panel.background = element_rect(fill = "white"))
c <- ggplot(g1revDEdw) +
geom_point(aes(x=logFC, y=-log10(adp), color=threshold)) +
scale_color_manual(values=c("red", "grey")) +
ggtitle("logFC <= -1, 62 DEGs") +
xlab("log2FC") +
ylab("-log10(P-value)") +
scale_y_continuous(limits = c(0,13)) +
scale_x_continuous(limits = c(-2.2,2.2)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.6), hjust = 0.5),
axis.title = element_text(size = rel(1.4)),
axis.text.x = element_text(size = rel(2)),
axis.text.y = element_text(size = rel(2)),
panel.background = element_rect(fill = "white"))
d <- ggplot(g1revDEdw.58) +
geom_point(aes(x=logFC, y=-log10(adp), color=threshold)) +
scale_color_manual(values=c("red", "grey")) +
ggtitle("logFC <= -0.58, 268 DEGs") +
xlab("log2FC") +
ylab("-log10(P-value)") +
scale_y_continuous(limits = c(0,13)) +
scale_x_continuous(limits = c(-2.2,2.2)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.6), hjust = 0.5),
axis.title = element_text(size = rel(1.4)),
axis.text.x = element_text(size = rel(2)),
axis.text.y = element_text(size = rel(2)),
panel.background = element_rect(fill = "white"))
g1rev.filt.pub <- ggarrange(a,b,c,d, legend = FALSE, ncol=4, nrow=1)
g1rev.filt.pub
pdf('g1rev.filt.pdf',width=20, height=4)
g1rev.filt.pub
dev.off()
table(g1revDE$threshold)
table(g1revDE.58$threshold)
table(g1revDEdw$threshold)
table(g1revDEdw.58$threshold)
evc.KEGG <- read.xlsx("../shared_data/EvC_KEGG_Summary.xlsx", colNames=TRUE, rowNames=TRUE)
evc.KEGG <- evc.KEGG %>% mutate(neglogP = -log10(pval))
evc.KEGG.ppar <- evc.KEGG %>% filter(Group == "PPAR")
evc.KEGG.other <- evc.KEGG %>% filter(Group == "Other")
ppar.pub <- ggplot() + geom_jitter(data=evc.KEGG.other, aes(x=Method,y=neglogP), color="black", alpha=0.5, size=2, width=0.2) + geom_jitter(data=evc.KEGG.ppar, aes(x=Method,y=neglogP), color="red", alpha=1, size=4, width=0.2) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
ppar.pub
pdf('ppar.pub.pdf')
ppar.pub
dev.off()
p.Cutoff <- 1
G1vRev.DAVID <- read.xlsx("../DAVID/g1vRev.DEGS.1.DAVID_withOverlaps.xlsx", colNames=TRUE, rowNames=TRUE)
G1vRev.DAVID.FC.58 <- read.xlsx("../DAVID/g1vRev.DEGS.58.DAVID_withOverlaps.xlsx", colNames=TRUE, rowNames=TRUE)
G1vRev.DAVID.RevDEGS <- read.xlsx("../DAVID/g1vRev.revDEGS.1.DAVID_withOverlaps.xlsx", colNames=TRUE, rowNames=TRUE)
G1vRev.DAVID.RevDEGS.58 <- read.xlsx("../DAVID/g1vRev.revDEGS.58.DAVID_withOverlaps.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev.david.filt  <- G1vRev.DAVID %>% filter(Bonferroni <= p.Cutoff)
g1vrev.david.filt  <- tibble::rownames_to_column(g1vrev.david.filt ,"Name")
g1rev.david.nohit <- g1vrev.david.filt  %>% filter(Hit == "Other")
g1rev.david.hit <- g1vrev.david.filt  %>% filter(Hit == "Hit")
g1rev.david.plot <- ggplot() + geom_jitter(data=g1rev.david.nohit, aes(x=Category,y=Bonferroni), color="black", alpha=0.4, size=0.6, width=0.1) + geom_jitter(data=g1rev.david.hit, aes(x=Category,y=Bonferroni), color="red", alpha=1, size=2, width=0.1) + ggtitle("g1rev") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(color = "black", size=1)) + coord_flip()
g1vrev.david.fc.58.filt  <- G1vRev.DAVID.FC.58 %>% filter(Bonferroni <= p.Cutoff)
g1vrev.david.fc.58.filt  <- tibble::rownames_to_column(g1vrev.david.fc.58.filt ,"Name")
g1rev.david.fc.58.nohit <- g1vrev.david.fc.58.filt  %>% filter(Hit == "Other")
g1rev.david.fc.58.hit <- g1vrev.david.fc.58.filt  %>% filter(Hit == "Hit")
g1rev.david.fc.58.plot <- ggplot() + geom_jitter(data=g1rev.david.fc.58.nohit, aes(x=Category,y=Bonferroni), color="black", alpha=0.4, size=0.6, width=0.1) + geom_jitter(data=g1rev.david.fc.58.hit, aes(x=Category,y=Bonferroni), color="red", alpha=1, size=2, width=0.1)  + ggtitle("g1rev.fc.58") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(color = "black", size=1)) + coord_flip()
g1vrev.david.revdegs.filt  <- G1vRev.DAVID.RevDEGS %>% filter(Bonferroni <= p.Cutoff)
g1vrev.david.revdegs.filt  <- tibble::rownames_to_column(g1vrev.david.revdegs.filt ,"Name")
g1rev.david.revdegs.nohit <- g1vrev.david.revdegs.filt  %>% filter(Hit == "Other")
g1rev.david.revdegs.hit <- g1vrev.david.revdegs.filt  %>% filter(Hit == "Hit")
g1rev.david.revdegs.plot <- ggplot() + geom_jitter(data=g1rev.david.revdegs.nohit, aes(x=Category,y=Bonferroni), color="black", alpha=0.4, size=0.6, width=0.1) + geom_jitter(data=g1rev.david.revdegs.hit, aes(x=Category,y=Bonferroni), color="red", alpha=1, size=2, width=0.1) + ggtitle("g1rev.revdegs") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(color = "black", size=1)) + coord_flip()
g1vrev.david.revdegs.58.filt  <- G1vRev.DAVID.RevDEGS.58 %>% filter(Bonferroni <= p.Cutoff)
g1vrev.david.revdegs.58.filt  <- tibble::rownames_to_column(g1vrev.david.revdegs.58.filt ,"Name")
g1rev.david.revdegs.58.nohit <- g1vrev.david.revdegs.58.filt  %>% filter(Hit == "Other")
g1rev.david.revdegs.58.hit <- g1vrev.david.revdegs.58.filt  %>% filter(Hit == "Hit")
g1rev.david.revdegs.58.plot <- ggplot() + geom_jitter(data=g1rev.david.revdegs.58.nohit, aes(x=Category,y=Bonferroni), color="black", alpha=0.4, size=0.6, width=0.1) + geom_jitter(data=g1rev.david.revdegs.58.hit, aes(x=Category,y=Bonferroni), color="red", alpha=1, size=2, width=0.1) + ggtitle("g1rev.revdegs.58") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(color = "black", size=1)) + coord_flip()
ggarrange(g1rev.david.plot,g1rev.david.fc.58.plot,g1rev.david.revdegs.plot,g1rev.david.revdegs.58.plot, legend = FALSE, ncol=2, nrow=2)
p.Cutoff <- 0.1
G1vRev.gpro <- read.xlsx("../g_profiler/g1vrev.Degs.1.gprofiler_withOverlaps.xlsx", colNames=TRUE, rowNames=TRUE)
G1vRev.gpro.FC.58 <- read.xlsx("../g_profiler/g1vrev.Degs.58.gprofiler_withOverlaps.xlsx", colNames=TRUE, rowNames=TRUE)
G1vRev.gpro.RevDEGS <- read.xlsx("../g_profiler/g1vrev.revDegs.1.gprofiler_withOverlaps.xlsx", colNames=TRUE, rowNames=TRUE)
G1vRev.gpro.RevDEGS.58 <- read.xlsx("../g_profiler/g1vrev.revDegs.58.gprofiler_withOverlaps.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev.gpro.filt  <- G1vRev.gpro %>% filter(p_value <= p.Cutoff)
g1vrev.gpro.filt  <- tibble::rownames_to_column(g1vrev.gpro.filt ,"Name")
g1rev.gpro.nohit <- g1vrev.gpro.filt  %>% filter(Hit == "Other")
g1rev.gpro.hit <- g1vrev.gpro.filt  %>% filter(Hit == "Hit")
g1rev.gpro.plot <- ggplot() + geom_jitter(data=g1rev.gpro.nohit, aes(x=source,y=p_value), color="black", alpha=0.4, size=1, width=0.2) + geom_jitter(data=g1rev.gpro.hit, aes(x=source,y=p_value), color="red", alpha=1, size=2, width=0.2) + ggtitle("g1rev") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(color = "black", size=1)) + coord_flip()
g1vrev.gpro.fc.58.filt  <- G1vRev.gpro.FC.58 %>% filter(p_value <= p.Cutoff)
g1vrev.gpro.fc.58.filt  <- tibble::rownames_to_column(g1vrev.gpro.fc.58.filt ,"Name")
g1rev.gpro.fc.58.nohit <- g1vrev.gpro.fc.58.filt  %>% filter(Hit == "Other")
g1rev.gpro.fc.58.hit <- g1vrev.gpro.fc.58.filt  %>% filter(Hit == "Hit")
g1rev.gpro.fc.58.plot <- ggplot() + geom_jitter(data=g1rev.gpro.fc.58.nohit, aes(x=source,y=p_value), color="black", alpha=0.4, size=1, width=0.2) + geom_jitter(data=g1rev.gpro.fc.58.hit, aes(x=source,y=p_value), color="red", alpha=1, size=2, width=0.2) + ggtitle("g1rev.fc.58") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(color = "black", size=1)) + coord_flip()
g1vrev.gpro.revdegs.filt  <- G1vRev.gpro.RevDEGS %>% filter(p_value <= p.Cutoff)
g1vrev.gpro.revdegs.filt  <- tibble::rownames_to_column(g1vrev.gpro.revdegs.filt ,"Name")
g1rev.gpro.revdegs.nohit <- g1vrev.gpro.revdegs.filt  %>% filter(Hit == "Other")
g1rev.gpro.revdegs.hit <- g1vrev.gpro.revdegs.filt  %>% filter(Hit == "Hit")
g1rev.gpro.revdegs.plot <- ggplot() + geom_jitter(data=g1rev.gpro.revdegs.nohit, aes(x=source,y=p_value), color="black", alpha=0.4, size=1, width=0.2) + geom_jitter(data=g1rev.gpro.revdegs.hit, aes(x=source,y=p_value), color="red", alpha=1, size=2, width=0.2) + ggtitle("g1rev.revdegs") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(color = "black", size=1)) + coord_flip()
g1vrev.gpro.revdegs.58.filt  <- G1vRev.gpro.RevDEGS.58 %>% filter(p_value <= p.Cutoff)
g1vrev.gpro.revdegs.58.filt  <- tibble::rownames_to_column(g1vrev.gpro.revdegs.58.filt ,"Name")
g1rev.gpro.revdegs.58.nohit <- g1vrev.gpro.revdegs.58.filt  %>% filter(Hit == "Other")
g1rev.gpro.revdegs.58.hit <- g1vrev.gpro.revdegs.58.filt  %>% filter(Hit == "Hit")
g1rev.gpro.revdegs.58.plot <- ggplot() + geom_jitter(data=g1rev.gpro.revdegs.58.nohit, aes(x=source,y=p_value), color="black", alpha=0.4, size=1, width=0.2) + geom_jitter(data=g1rev.gpro.revdegs.58.hit, aes(x=source,y=p_value), color="red", alpha=1, size=2, width=0.2) + ggtitle("g1rev.revdegs.58") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(color = "black", size=1)) + coord_flip()
ggarrange(g1rev.gpro.plot,g1rev.gpro.fc.58.plot,g1rev.gpro.revdegs.plot,g1rev.gpro.revdegs.58.plot, legend = FALSE, ncol=2, nrow=2)
msig7.2 <- read.xlsx("../shared_data/msigdb_genesetsInfo_v7.2_paperSubset.xlsx", colNames=TRUE, rowNames=TRUE)
sub300 <- msig7.2 %>% filter(Size <= 300)
plus300 <- msig7.2 %>% filter(Size > 300)
boxplot7.2 <- ggplot(msig7.2, aes(Group, Size)) + geom_boxplot() + coord_cartesian(ylim = c(0, 300)) +
scale_x_discrete(limits = c("HALLMARK", "c2cgp", "c2cp", "KEGG", "BIOCARTA", "PID", "REACTOME", "WP", "c5bp", "c5cc", "c5mf"))
boxplot7.2
pdf('boxplot7.2.pdf',width=10, height=10)
boxplot7.2
dev.off()
table(plus300$Group)
table(sub300$Group)
table(msig7.2$Group)
as.data.frame(msig7.2 %>% group_by(Group) %>% summarize(n(),median(Size), mean(Size)))
length(msig7.2$Size)
mean(msig7.2$Size)
msig7.2 <- read.xlsx("../shared_data/msigdb_genesetsInfo_v7.2_paperSubset.xlsx", colNames=TRUE, rowNames=TRUE)
sub300 <- msig7.2 %>% filter(Size <= 300)
plus300 <- msig7.2 %>% filter(Size > 300)
boxplot7.2 <- ggplot(msig7.2, aes(Group, Size)) + geom_boxplot() + coord_cartesian(ylim = c(0, 300)) +
scale_x_discrete(limits = c("HALLMARK", "c2cgp", "c2cp", "KEGG", "BIOCARTA", "PID", "REACTOME", "WP", "c5bp", "c5cc", "c5mf"))
boxplot7.2
pdf('boxplot7.2.pdf',width=10, height=10)
boxplot7.2
dev.off()
table(plus300$Group)
table(sub300$Group)
table(msig7.2$Group)
as.data.frame(msig7.2 %>% group_by(Group) %>% summarize(n(),median(Size), mean(Size)))
length(msig7.2$Size)
mean(msig7.2$Size)
il17.upset <- read.xlsx("../shared_data/IL17_pathway_Pivot_PlusData_upset.xlsx", colNames=TRUE, rowNames=TRUE)
il17.upset <- tibble::rownames_to_column(il17.upset, "Gene")
tool <- colnames(il17.upset)[3:7]
il17.upset[tool] = il17.upset[tool] == 1
t(head(il17.upset[tool], 3))
il17.upset$Direction <- factor(il17.upset$Direction, levels = c('No', 'Up', 'Down'))
il17.upset.plot <- upset(
il17.upset,
tool,
name='Tool Group',
base_annotations=list(
'Gene Counts'=intersection_size(
counts=FALSE,
mapping=aes(fill=Direction)) + scale_fill_manual(values=c('No'='#B3B2B2','Up'='#E41A1C', 'Down'='#377EB8'))
),
set_sizes=(upset_set_size(geom=geom_bar(width=0.4))) + theme(axis.ticks.x=element_line(),axis.text.x=element_text(angle=90)),
width_ratio=0.1)
print(il17.upset.plot)
pdf('il17.upset.pdf',width=6, height=6)
il17.upset.plot
dev.off()
il17.upset.plot
il17.upset <- read.xlsx("../shared_data/IL17_pathway_Pivot_PlusData_upset.xlsx", colNames=TRUE, rowNames=TRUE)
il17.upset <- tibble::rownames_to_column(il17.upset, "Gene")
tool <- colnames(il17.upset)[3:7]
il17.upset[tool] = il17.upset[tool] == 1
t(head(il17.upset[tool], 3))
il17.upset$Direction <- factor(il17.upset$Direction, levels = c('No', 'Up', 'Down'))
il17.upset.plot <- upset(
il17.upset,
tool,
name='Tool Group',
base_annotations=list(
'Gene Counts'=intersection_size(
counts=FALSE,
mapping=aes(fill=Direction)) + scale_fill_manual(values=c('No'='#B3B2B2','Up'='#E41A1C', 'Down'='#377EB8'))
),
set_sizes=(upset_set_size(geom=geom_bar(width=0.4))) + theme(axis.ticks.x=element_line(),axis.text.x=element_text(angle=90)),
width_ratio=0.1)
pdf('il17.upset.pdf',width=6, height=6)
il17.upset.plot
dev.off()
il17.upset.plot
svcDE.st <- read.xlsx("../shared_data/musc_SkeVHeart_data_vol.xlsx", colNames=TRUE, rowNames=TRUE)
svcDE <- svcDE.st %>% mutate(threshold = ifelse(adp <= 0.05 & abs(logFC) >= 1,"de","other"))
svcDE.2 <- svcDE.st %>% mutate(threshold = ifelse(adp <= 0.05 & abs(logFC) >= 2,"de","other"))
svcDE.4 <- svcDE.st %>% mutate(threshold = ifelse(adp <= 0.05 & abs(logFC) >= 4,"de","other"))
svcDEup <- svcDE.st %>% mutate(threshold = ifelse(adp <= 0.05 & logFC >= 1,"de","other"))
svcDEup.2 <- svcDE.st %>% mutate(threshold = ifelse(adp <= 0.05 & logFC >=  2,"de","other"))
svcDEup.4 <- svcDE.st %>% mutate(threshold = ifelse(adp <= 0.05 & logFC >= 4,"de","other"))
a <- ggplot(svcDE) +
geom_point(aes(x=logFC, y=-log10(adp), color=threshold)) +
scale_color_manual(values=c("red", "grey")) +
scale_y_continuous(limits = c(0,55),labels = NULL, breaks = NULL) +
scale_x_continuous(limits = c(-12,12),labels = NULL, breaks = NULL) +
theme(legend.position = "none",
axis.title = element_blank(),
panel.background = element_rect(fill = "white"))
b <- ggplot(svcDE.2) +
geom_point(aes(x=logFC, y=-log10(adp), color=threshold)) +
scale_color_manual(values=c("red", "grey")) +
scale_y_continuous(limits = c(0,55),labels = NULL, breaks = NULL) +
scale_x_continuous(limits = c(-12,12),labels = NULL, breaks = NULL) +
theme(legend.position = "none",
axis.title = element_blank(),
panel.background = element_rect(fill = "white"))
c <- ggplot(svcDE.4) +
geom_point(aes(x=logFC, y=-log10(adp), color=threshold)) +
scale_color_manual(values=c("red", "grey")) +
scale_y_continuous(limits = c(0,55),labels = NULL, breaks = NULL) +
scale_x_continuous(limits = c(-12,12),labels = NULL, breaks = NULL) +
theme(legend.position = "none",
axis.title = element_blank(),
panel.background = element_rect(fill = "white"))
d <- ggplot(svcDEup) +
geom_point(aes(x=logFC, y=-log10(adp), color=threshold)) +
scale_color_manual(values=c("red", "grey")) +
scale_y_continuous(limits = c(0,55),labels = NULL, breaks = NULL) +
scale_x_continuous(limits = c(-12,12),labels = NULL, breaks = NULL) +
theme(legend.position = "none",
axis.title = element_blank(),
panel.background = element_rect(fill = "white"))
e <- ggplot(svcDEup.2) +
geom_point(aes(x=logFC, y=-log10(adp), color=threshold)) +
scale_color_manual(values=c("red", "grey")) +
scale_y_continuous(limits = c(0,55),labels = NULL, breaks = NULL) +
scale_x_continuous(limits = c(-12,12),labels = NULL, breaks = NULL) +
theme(legend.position = "none",
axis.title = element_blank(),
panel.background = element_rect(fill = "white"))
f <- ggplot(svcDEup.4) +
geom_point(aes(x=logFC, y=-log10(adp), color=threshold)) +
scale_color_manual(values=c("red", "grey")) +
scale_y_continuous(limits = c(0,55),labels = NULL, breaks = NULL) +
scale_x_continuous(limits = c(-12,12),labels = NULL, breaks = NULL) +
theme(legend.position = "none",
axis.title = element_blank(),
panel.background = element_rect(fill = "white"))
svcVol.pub <- ggarrange(a,b,c,d,e,f, legend = FALSE, ncol=1, nrow=6)
svcVol.pub
pdf('svcVol.pdf', width=1,height=1)
svcVol.pub
dev.off()
avc.path <- read.xlsx("../shared_data/IL17_pathways_summaryFigure.xlsx", colNames=TRUE, rowNames=TRUE)
avc.path <- avc.path %>% mutate(neglogP = -log10(pval))
avc.path.il17best <- avc.path %>% filter(Group == "IL17best")
avc.path.il17 <- avc.path %>% filter(Group == "IL17")
avc.path.other <- avc.path %>% filter(Group == "Other")
avc.IL17.pub <- ggplot() + geom_jitter(data=avc.path.other, aes(x=factor(Tool, level = c('Metacore','ipathway','IPA','gprofiler','GSEA','DAVID')),y=neglogP), color="darkgrey", alpha=0.2, size=1, width=0.2) + geom_jitter(data=avc.path.il17, aes(x=factor(Tool, level = c('Metacore','ipathway','IPA','gprofiler','GSEA', 'DAVID')),y=neglogP), color="blue", alpha=0.6, size=3, width=0.2) + geom_jitter(data=avc.path.il17best, aes(x=factor(Tool, level = c('Metacore','ipathway','IPA','gprofiler','GSEA','DAVID')),y=neglogP), color="red", alpha=1, size=4, width=0.2) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
avc.IL17.pub
pdf('avc.IL17.pdf')
avc.IL17.pub
dev.off()
avc.path <- read.xlsx("../shared_data/IL17_pathways_summaryFigure.xlsx", colNames=TRUE, rowNames=TRUE)
avc.path <- avc.path %>% mutate(neglogP = -log10(pval))
avc.path.il17best <- avc.path %>% filter(Group == "IL17best")
avc.path.il17 <- avc.path %>% filter(Group == "IL17")
avc.path.other <- avc.path %>% filter(Group == "Other")
avc.IL17.pub <- ggplot() + geom_jitter(data=avc.path.other, aes(x=factor(Tool, level = c('Metacore','ipathway','IPA','gprofiler','GSEA','DAVID')),y=neglogP), color="darkgrey", alpha=0.2, size=1, width=0.2) + geom_jitter(data=avc.path.il17, aes(x=factor(Tool, level = c('Metacore','ipathway','IPA','gprofiler','GSEA', 'DAVID')),y=neglogP), color="blue", alpha=0.6, size=3, width=0.2) + geom_jitter(data=avc.path.il17best, aes(x=factor(Tool, level = c('Metacore','ipathway','IPA','gprofiler','GSEA','DAVID')),y=neglogP), color="red", alpha=1, size=4, width=0.2) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
pdf('avc.IL17.pdf')
avc.IL17.pub
dev.off()
avc.IL17.pub
il17.upset <- read.xlsx("../shared_data/IL17_pathway_Pivot_PlusData_upset.xlsx", colNames=TRUE, rowNames=TRUE)
il17.upset <- tibble::rownames_to_column(il17.upset, "Gene")
tool <- colnames(il17.upset)[3:7]
il17.upset[tool] = il17.upset[tool] == 1
t(head(il17.upset[tool], 3))
il17.upset$Direction <- factor(il17.upset$Direction, levels = c('No', 'Up', 'Down'))
il17.upset.plot <- upset(
il17.upset,
tool,
name='Tool Group',
base_annotations=list(
'Gene Counts'=intersection_size(
counts=FALSE,
mapping=aes(fill=Direction)) + scale_fill_manual(values=c('No'='#B3B2B2','Up'='#E41A1C', 'Down'='#377EB8'))
),
set_sizes=(upset_set_size(geom=geom_bar(width=0.4))) + theme(axis.ticks.x=element_line(),axis.text.x=element_text(angle=90)),
width_ratio=0.1)
pdf('il17.upset.pdf',width=6, height=6)
il17.upset.plot
dev.off()
il17.upset.plot
